import{_ as s,o as n,c as a,f as e}from"./app.1ded8a6d.js";const t={},p=e(`<h1 id="persons-api-sdk-dotnet" tabindex="-1"><a class="header-anchor" href="#persons-api-sdk-dotnet" aria-hidden="true">#</a> Persons API SDK Dotnet</h1><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>This is the official dotnet SDK for the persons API. SDK supports Linq expressions to easily query person data.</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><p>Package is availible on Nuget</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package BccCode.Persons.Api.Client
dotnet <span class="token function">add</span> package BccCode.Persons.Api.Contracts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configure" tabindex="-1"><a class="header-anchor" href="#configure" aria-hidden="true">#</a> Configure</h2><ol><li><p>Import the client package</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> BccCode<span class="token punctuation">.</span>Persons<span class="token punctuation">.</span>Api<span class="token punctuation">.</span>Client
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Create the client</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PersonsApiClientOptions</span><span class="token punctuation">{</span>
    ClientId <span class="token operator">=</span> <span class="token string">&quot;CLIENT_ID&quot;</span><span class="token punctuation">,</span>
    ClientSecret <span class="token operator">=</span> <span class="token string">&quot;CLIENT_SECRET&quot;</span><span class="token punctuation">,</span>
    ApiBasePath <span class="token operator">=</span> <span class="token string">&quot;API_ORIGIN&quot;</span><span class="token punctuation">,</span>
    Audience <span class="token operator">=</span> <span class="token string">&quot;API_AUDIENCE&quot;</span><span class="token punctuation">,</span>
    Authority <span class="token operator">=</span> <span class="token string">&quot;IDENTITY_SERVER_ORIGIN&quot;</span><span class="token punctuation">,</span>
    Scope <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">PersonsApiScope<span class="token punctuation">.</span>ReadName</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">PersonsApiScope<span class="token punctuation">.</span>ReadGender</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PersonsApiClient</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="use-the-client" tabindex="-1"><a class="header-anchor" href="#use-the-client" aria-hidden="true">#</a> Use the client</h2><h3 id="get-a-single-person" tabindex="-1"><a class="header-anchor" href="#get-a-single-person" aria-hidden="true">#</a> Get a single person</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> person <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">getPersonAsync</span><span class="token punctuation">(</span><span class="token number">1234</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get-all-the-persons" tabindex="-1"><a class="header-anchor" href="#get-all-the-persons" aria-hidden="true">#</a> Get all the persons</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> allPersons <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">getPersonsAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get-filtered-persons" tabindex="-1"><a class="header-anchor" href="#get-filtered-persons" aria-hidden="true">#</a> Get filtered persons</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> personsUnderTwoYearsOld <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">getQueryable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Age <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),o=[p];function c(i,l){return n(),a("div",null,o)}const d=s(t,[["render",c],["__file","sdk-dotnet.html.vue"]]);export{d as default};
