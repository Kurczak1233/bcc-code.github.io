import{_ as n,o as s,c as a,f as t}from"./app.1ded8a6d.js";const p={},e=t(`<h1 id="protect-uploads-files" tabindex="-1"><a class="header-anchor" href="#protect-uploads-files" aria-hidden="true">#</a> Protect Uploads files</h1><p>We have been notified that uploaded files on WordPress were not protected with BCC Signon, allowing a direct access using the file’s URL. This is true for all WordPress websites, also those protected by WordPress’s login system.</p><p>However, we are aware that this can be an issue for you local church website. Here will be described a way to prevent unprotected access to your uploads; this may be integrated to BCC’s Signon plugin in the future, but we want to get your feedback first to ensure it fits all of your configurations.</p><p><strong>This has been tested on a Linux server running Apache 2.4.18 and WordPress 5.2.3: please contact us if this isn’t working seamlessly for you.</strong></p><ol><li>Add the following file as <code>dl-file.php</code> to your WordPress root folder.</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">/*
 * dl-file.php
 *
 * Protect uploaded files with login.
 *
 * @link http://wordpress.stackexchange.com/questions/37144/protect-wordpress-uploads-if-user-is-not-logged-in
 *
 * @author hakre &lt;http://hakre.wordpress.com/&gt;
* @license GPL-3.0+
* @registry SPDX
*/</span>

<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;wp-load.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/formatting.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/capabilities.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/user.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/meta.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/post.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require_once</span> <span class="token constant">ABSPATH</span> <span class="token operator">.</span> <span class="token constant">WPINC</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/pluggable.php&#39;</span><span class="token punctuation">;</span>
<span class="token function">wp_cookie_constants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ob_end_flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">is_user_logged_in</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>  <span class="token class-name">auth_redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$basedir</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">array_values</span><span class="token punctuation">(</span><span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token function">wp_upload_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;basedir&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$file</span> <span class="token operator">=</span>  <span class="token function">rtrim</span><span class="token punctuation">(</span><span class="token variable">$basedir</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token operator">.</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;file&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;file&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$basedir</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token function">status_header</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">wp_redirect</span><span class="token punctuation">(</span><span class="token function">home_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$mime</span> <span class="token operator">=</span> <span class="token function">wp_check_filetype</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$mime</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;mime_content_type&#39;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token variable">$mime</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mime_content_type</span><span class="token punctuation">(</span> <span class="token variable">$file</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$mime</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>
<span class="token variable">$mimetype</span> <span class="token operator">=</span> <span class="token variable">$mime</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
<span class="token variable">$mimetype</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;image/&#39;</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;.&#39;</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">header</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;Content-Type: &#39;</span> <span class="token operator">.</span> <span class="token variable">$mimetype</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// always send this</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;SERVER_SOFTWARE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Microsoft-IIS&#39;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token function">header</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;Content-Length: &#39;</span> <span class="token operator">.</span> <span class="token function">filesize</span><span class="token punctuation">(</span> <span class="token variable">$file</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$last_modified</span> <span class="token operator">=</span> <span class="token function">gmdate</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;D, d M Y H:i:s&#39;</span><span class="token punctuation">,</span> <span class="token function">filemtime</span><span class="token punctuation">(</span> <span class="token variable">$file</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$last_modified</span> <span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;Last-Modified: <span class="token interpolation"><span class="token variable">$last_modified</span></span> GMT&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;ETag: &#39;</span> <span class="token operator">.</span> <span class="token variable">$etag</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">header</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;Expires: &#39;</span> <span class="token operator">.</span> <span class="token function">gmdate</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;D, d M Y H:i:s&#39;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1800</span> <span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39; GMT&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Support for Conditional GET</span>
<span class="token variable">$client_etag</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HTTP_IF_NONE_MATCH&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HTTP_IF_NONE_MATCH&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name return-type">false</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HTTP_IF_MODIFIED_SINCE&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HTTP_IF_MODIFIED_SINCE&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>

<span class="token variable">$client_last_modified</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;HTTP_IF_MODIFIED_SINCE&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// If string is empty, return 0. If not, attempt to parse into a timestamp</span>
<span class="token variable">$client_modified_timestamp</span> <span class="token operator">=</span> <span class="token variable">$client_last_modified</span> <span class="token operator">?</span> <span class="token function">strtotime</span><span class="token punctuation">(</span> <span class="token variable">$client_last_modified</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// Make a timestamp for our most recent modification...</span>
<span class="token variable">$modified_timestamp</span> <span class="token operator">=</span> <span class="token function">strtotime</span><span class="token punctuation">(</span><span class="token variable">$last_modified</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$client_last_modified</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$client_etag</span> <span class="token punctuation">)</span>
<span class="token operator">?</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$client_modified_timestamp</span> <span class="token operator">&gt;=</span> <span class="token variable">$modified_timestamp</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token variable">$client_etag</span> <span class="token operator">==</span> <span class="token variable">$etag</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token punctuation">:</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$client_modified_timestamp</span> <span class="token operator">&gt;=</span> <span class="token variable">$modified_timestamp</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span> <span class="token variable">$client_etag</span> <span class="token operator">==</span> <span class="token variable">$etag</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token function">status_header</span><span class="token punctuation">(</span> <span class="token number">304</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// If we made it this far, just serve the file</span>
<span class="token function">readfile</span><span class="token punctuation">(</span> <span class="token variable">$file</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Append the following lines to your .htaccess</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>RewriteCond %{REQUEST_FILENAME} -s
RewriteRule ^wp-content/uploads/(.*)$ dl-file.php?file=$1 [QSA,L]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>Next: <a href="troubleshooting">Troubleshooting</a></p>`,10),o=[e];function i(c,l){return s(),a("div",null,o)}const r=n(p,[["render",i],["__file","protect-uploads-files.html.vue"]]);export{r as default};
