import{_ as e,o,c as t,f as i}from"./app.1ded8a6d.js";const a={},n=i('<h1 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h1><ul><li>As we decided to use Oauth as standard mean of authorization, we should align on how are we going to name our scopes</li></ul><h2 id="propositions" tabindex="-1"><a class="header-anchor" href="#propositions" aria-hidden="true">#</a> Propositions</h2><ul><li>[Jakub] <code>&lt;VERB&gt;:&lt;ENTITY&gt;.&lt;SUBENTITY&gt;</code>, e.g. <code>read:org</code>, <code>read:person.email</code></li><li>[Philip previously]: <code>&lt;SYSTEM&gt;.&lt;ENTITY/SUBENTITY&gt;_&lt;VERB&gt;</code>, e.g. <code>members.email_read</code></li><li>[Reng]: <code>[&lt;TENANT&gt;:]&lt;ENTITY&gt;.&lt;SUBENTITY&gt;:&lt;VERB&gt;</code>, e.g. <code>org:read</code>, <code>bccoslofollo:person.email:read</code> , <code>bcctonsberg:registrations:admin</code>. Alternatively TENANT could be it&#39;s own scope e.g. <code>bccpoland</code> which is used in <em>combination</em> with other scopes.</li></ul><h1 id="decision" tabindex="-1"><a class="header-anchor" href="#decision" aria-hidden="true">#</a> Decision</h1><p><code>&lt;Entity&gt;[.&lt;SubEntity&gt;]#&lt;Permission&gt;</code></p><p>For parsing we use</p><ul><li>&quot;.&quot; to determine scope levels.</li><li>scopes always goes from big (non-ambiguous) to small (eg. brunstadtv.search_history#read, or person.address.firstline#write)</li><li>&quot;#&quot; to prefix ability/permission level</li></ul><p>For reading we use (snakecase)</p><ul><li>&quot;_&quot; simply to make things more readable</li><li>lowercase only</li></ul><p>Scopes and permissions are defined and configured by Terraform and shouldn&#39;t be maintained manually.</p><h1 id="consequences" tabindex="-1"><a class="header-anchor" href="#consequences" aria-hidden="true">#</a> Consequences</h1><p>See conversation below.</p><h1 id="alternatives" tabindex="-1"><a class="header-anchor" href="#alternatives" aria-hidden="true">#</a> Alternatives</h1><p>See conversation below.</p>',15),s=[n];function r(l,d){return o(),t("div",null,s)}const h=e(a,[["render",r],["__file","20220804__ADR__Auth0_scope_naming_convention.html.vue"]]);export{h as default};
