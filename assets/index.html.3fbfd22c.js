import{_ as t,r as i,o as c,c as n,a as e,b as a,d as r,f as s}from"./app.1ded8a6d.js";const l={},h=e("h2",{id:"architectural-decision-log-adl",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#architectural-decision-log-adl","aria-hidden":"true"},"#"),a(" Architectural Decision Log (ADL)")],-1),d=e("p",null,"This is a collection of decisions (Architecture Decision Records) that have been made for BCC.",-1),u=e("p",null,"Each document describes one decision and reflects what the pros and cons are, what other solutions were considered, as well as any additional background for the decision.",-1),f={href:"https://cognitect.com/blog/2011/11/15/documenting-architecture-decisions",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/joelparkerhenderson/architecture-decision-record",target:"_blank",rel:"noopener noreferrer"},_=s('<p>Each ADR consists of following sections:</p><ul><li>Context - architectural drivers, business cases</li><li>Decision - the choice and the arguments</li><li>Consequences - known issues which can occur because of chosen decision</li><li>Alternatives - were there any other alternatives? why were they not choose</li></ul><h2 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> Index</h2><ul><li><a href="01-architecture-for-services-releated-to-members">01-architecture-for-services-releated-to-members</a></li><li><a href="02-approach-to-microservice-architecture">02-approach-to-microservice-architecture</a></li><li><a href="#">03-approach-to-application-hosting-infrastructure</a></li><li><a href="04-language-for-core-apis">04-language-solution</a></li><li><a href="05-database-technology">05-database-technology</a></li><li><a href="#">06-cloud-provider</a></li><li><a href="#">07-approach-to-testing</a></li><li><a href="#">08-api-gateway-solution</a></li><li><a href="#">09-api-documentation-solution</a></li></ul>',4);function g(m,b){const o=i("ExternalLinkIcon");return c(),n("div",null,[h,d,u,e("p",null,[a("More about it "),e("a",f,[a("here"),r(o)]),a(" or "),e("a",p,[a("here"),r(o)])]),_])}const v=t(l,[["render",g],["__file","index.html.vue"]]);export{v as default};
